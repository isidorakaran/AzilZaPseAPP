/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package karan.view;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger; 
import javax.swing.JOptionPane;
import javax.swing.Timer;
import karan.util.HibernateUtil;
import org.hibernate.Session;

/**
 *
 * @author WinUSER
 */
public class SplashScreen extends javax.swing.JFrame {
    

    /**
     * Creates new form SplashScreen
     */
    public SplashScreen() {
        initComponents();
        ucitaj();
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        barUcitavanjeBar = new javax.swing.JProgressBar();
        lblUcitavanje = new javax.swing.JLabel();
        lblImeAplikacije = new javax.swing.JLabel();
        lblPostotakUcitavanja = new javax.swing.JLabel();
        PozadinaGif = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setType(java.awt.Window.Type.POPUP);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel2.add(barUcitavanjeBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 570, 760, 20));

        lblUcitavanje.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        lblUcitavanje.setText("Učitavanje...");
        jPanel2.add(lblUcitavanje, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 550, -1, -1));

        lblImeAplikacije.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblImeAplikacije.setText("AZIL ZA PSE");
        jPanel2.add(lblImeAplikacije, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 430, -1, -1));

        lblPostotakUcitavanja.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblPostotakUcitavanja.setText("0%");
        lblPostotakUcitavanja.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                lblPostotakUcitavanjaInputMethodTextChanged(evt);
            }
        });
        jPanel2.add(lblPostotakUcitavanja, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 550, -1, -1));

        PozadinaGif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AnimatedDog.gif"))); // NOI18N
        PozadinaGif.setText("jLabel2");
        jPanel2.add(PozadinaGif, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 760, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lblPostotakUcitavanjaInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_lblPostotakUcitavanjaInputMethodTextChanged


    }//GEN-LAST:event_lblPostotakUcitavanjaInputMethodTextChanged

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel PozadinaGif;
    private javax.swing.JProgressBar barUcitavanjeBar;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblImeAplikacije;
    private javax.swing.JLabel lblPostotakUcitavanja;
    private javax.swing.JLabel lblUcitavanje;
    // End of variables declaration//GEN-END:variables

    private void ucitaj()  {
        
        new Ucitavanje().start();
        new UcitavanjeGif().start();
        new UcitanjeProzorLogin().start();
      
    }
    
   
    
    
    private class Ucitavanje extends Thread{
        public void run(){
         try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {

                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SplashScreen.class.getName()).log(java.util.logging.Level.SEVERE,null,ex);
        }catch(InstantiationException ex){
            java.util.logging.Logger.getLogger(SplashScreen.class.getName()).log(java.util.logging.Level.SEVERE,null,ex);
        }catch(IllegalAccessException ex){
            java.util.logging.Logger.getLogger(SplashScreen.class.getName()).log(java.util.logging.Level.SEVERE,null,ex);
        }catch(javax.swing.UnsupportedLookAndFeelException ex){
            java.util.logging.Logger.getLogger(SplashScreen.class.getName()).log(java.util.logging.Level.SEVERE,null,ex);
        }
    HibernateUtil.getSession();
    
        try {
            for(int i=0;i<=100;i++){
                Thread.sleep(60);
                  lblPostotakUcitavanja.setText(i + "%");
                  if(i==10){
                      lblUcitavanje.setText("Učitavanje.");
                  }
                  if(i==20){
                      lblUcitavanje.setText("Učitavanje..");
                  }
                  if(i==30){
                      lblUcitavanje.setText("Učitavanje...");
                  }
                  if(i==40){
                      lblUcitavanje.setText("Uspješno učitavanje!");
                  }
                  if(i==50){
                      lblUcitavanje.setText("Pokretanje aplikacije!");
                  }
                  
                  barUcitavanjeBar.setValue(i);
                 
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
    }
        
    }
    
     private class UcitavanjeGif extends Thread{
        public void run(){
         try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {

                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                    
                }
            }
            
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SplashScreen.class.getName()).log(java.util.logging.Level.SEVERE,null,ex);
        }catch(InstantiationException ex){
            java.util.logging.Logger.getLogger(SplashScreen.class.getName()).log(java.util.logging.Level.SEVERE,null,ex);
        }catch(IllegalAccessException ex){
            java.util.logging.Logger.getLogger(SplashScreen.class.getName()).log(java.util.logging.Level.SEVERE,null,ex);
        }catch(javax.swing.UnsupportedLookAndFeelException ex){
            java.util.logging.Logger.getLogger(SplashScreen.class.getName()).log(java.util.logging.Level.SEVERE,null,ex);
        }
    HibernateUtil.getSession();
    PozadinaGif.setVisible(true);
            try {
                Thread.sleep(60);
            } catch (InterruptedException e) {
                JOptionPane.showMessageDialog(null, e);
            }
    
}
     }
private class UcitanjeProzorLogin extends Thread{

        @Override
        public void run() {
            Session s=HibernateUtil.getSession();
            
          if(!s.getMetamodel().getEntities().isEmpty()){
               try {
            Thread.sleep(7000);
        } catch (InterruptedException ex) {
        }
                new ProzorLogin().setVisible(true);
                
                dispose();
            }else{
              JOptionPane.showMessageDialog(getRootPane(), "Problem sa bazom podataka.");
          }
      
            
            
            
        }
    
}

}